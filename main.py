import os
import datetime
import telebot
import csv
from config import bot_key, admins
from generate_image import save_image

filepath = ''
db_path = 'data/users.csv'

def close(e):
    print(f'–û—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ: {e}')


# —Å–æ–∑–¥–∞–Ω–∏–µ –±–¥ –∏–ª–∏ –∑–∞–ø–∏—Å—å –±–¥ –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫

file_exists = os.path.isfile(db_path)
if not file_exists:
    with open(db_path, 'a', newline='') as csvfile:
        writer = csv.writer(csvfile, dialect='excel')
        writer.writerow(['user_id', 'time_registred'])

# —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ –±–æ—Ç—É

bot = telebot.TeleBot(bot_key)

@bot.message_handler(commands=['start'])
def start_handler(message):
    try:
        local_user_list = []
        with open(db_path) as f:
            csv_reader = csv.reader(f)
            next(csv_reader, None)
            for user in csv_reader:
                if len(user) > 0:
                    local_user_list.append(user[0])
        if str(message.chat.id) not in local_user_list:
            add_user(message.chat.id)

        response_text = (
            'üëã –ü—Ä–∏–≤–µ—Ç! \n\n–ß—Ç–æ–±—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –ø—Ä–æ–º–ø—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ –ø—Ä—è–º–æ –≤ —á–∞—Ç.\n\n'
            '–ü—Ä–∏–º–µ—Ä: <i>Extreme close-up of a single tiger eye with detailed texture and the word "BlackLab" painted in white.</i>\n\n'
            '–ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–æ–º–ø—Ç–∞ —è —Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—é –µ–≥–æ –≤–∞–º.'
        )
        bot.send_message(message.chat.id, response_text, parse_mode="HTML")
    except Exception as e:
        close(e)
        return


@bot.message_handler(commands=['help'])
def help_handler(message):
    try:
        response_text = (
            '–ö–æ–º–∞–Ω–¥–∞ /help –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞–ø–∏—Å–∞–Ω–∏—é –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π. –í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: \n\n'

            '<b>1. –ë—É–¥—å—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏</b>: –ß–µ–º –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ –≤—ã –æ–ø–∏—à–µ—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, —Ç–µ–º –ª—É—á—à–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –ù–∞–ø—Ä–∏–º–µ—Ä, –≤–º–µ—Å—Ç–æ "—Çiger", –Ω–∞–ø–∏—à–∏—Ç–µ <i>Extreme close-up of a single tiger eye with detailed texture</i>. \n\n'

            '<b>2. –£–∫–∞–∑—ã–≤–∞–π—Ç–µ –∫–ª—é—á–µ–≤—ã–µ –¥–µ—Ç–∞–ª–∏</b>: –û–ø–∏—à–∏—Ç–µ –≤–∞–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤–∫–ª—é—á–µ–Ω—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ –æ—Å–≤–µ—â–µ–Ω–∏–µ, —Ü–≤–µ—Ç–∞ –∏ —Ç–µ–∫—Å—Ç—É—Ä—ã. –ù–∞–ø—Ä–∏–º–µ—Ä, <i>natural lighting to capture eye shine</i>. \n\n'

            '<b>3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —è—Å–Ω—ã–π —è–∑—ã–∫</b>: –ü–∏—à–∏—Ç–µ –ø—Ä–æ—Å—Ç—ã–º –∏ –ø–æ–Ω—è—Ç–Ω—ã–º —è–∑—ã–∫–æ–º, –∏–∑–±–µ–≥–∞—è –º–Ω–æ–≥–æ–∑–Ω–∞—á–Ω—ã—Ö —Å–ª–æ–≤. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Å–∏—Å—Ç–µ–º–µ —Ç–æ—á–Ω–µ–µ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å. \n\n'

            '<b>4. –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—é</b>: –û—à–∏–±–∫–∏ –≤ —Ç–µ–∫—Å—Ç–µ –º–æ–≥—É—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –Ω–µ–≤–µ—Ä–Ω–æ–π –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –≤–∞—à–µ–≥–æ –ø—Ä–æ–º–ø—Ç–∞. \n\n'

            '–ü—Ä–∏–º–µ—Ä —Ö–æ—Ä–æ—à–æ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞: <i>Extreme close-up of a single tiger eye, direct frontal view. Detailed iris and pupil with sharp focus on eye texture and color. The word "BlackBox" painted over it in big, white brush strokes with visible texture.</i>'

        )
        bot.send_message(message.chat.id, response_text, parse_mode='HTML')
    except Exception as e:
        close(e)
        return
@bot.message_handler(commands=['user_count'])
def user_count_handler(message):
    try:
        if str(message.from_user.id) in admins:
            with open('data/users.csv') as f:
                _ = f.readline()
                line = f.readline()
                users_number = 1
                while True:
                    if f.readline() != '':
                        users_number += 1
                    else:
                        break
            bot.send_message(message.chat.id, f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_number}')
        else:
            bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ')
            for admin_id in admins:
                bot.send_message(admin_id,
                                 f'–ö—Ç–æ —Ç–æ –ø—ã—Ç–∞–ª—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É user_count. \nid = {message.from_user.id}. Username = @{message.from_user.username}')
    except Exception as e:
        close(e)
        return

@bot.callback_query_handler(func=lambda x: True)
def button_handler(call):
    if call.data == '–±–µ–∑ —Å–∂–∞—Ç–∏—è':
        try:
            with open(filepath, 'rb') as f:
                bot.send_document(call.message.chat.id, f)
        except Exception as e:
            bot.send_message(call.message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å')
            print(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞ –±–µ–∑ —Å–∂–∞—Ç–∏—è: {e}')


@bot.message_handler(func=lambda x: True)
def generic_handler(message):
    global filepath
    try:
        if message.text.startswith('/broadcast'):
            if str(message.from_user.id) in admins:
                broadcast_text = message.text[11:].strip()
                if broadcast_text:
                    send_to_all(broadcast_text)
                    bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º')
            else:
                bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ')
                for admin_id in admins:
                    bot.send_message(admin_id,
                                     f'–ö—Ç–æ —Ç–æ –ø—ã—Ç–∞–ª—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É broadcast. \nid = {message.from_user.id}. Username = @{message.from_user.username}')
        else:
            bot.send_message(message.chat.id,
                             '–ó–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø—Ä–∏–Ω—è—Ç, –∂–¥–∏—Ç–µ. \n–ò–∑-–∑–∞ –≤—ã—Å–æ–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: 2 –º–∏–Ω—É—Ç—ã')
            filepath = save_image(message.text)

            # keyboard = types.InlineKeyboardMarkup(row_width=1)
            # request_file_button = types.InlineKeyboardButton('üìé –ó–∞–ø—Ä–æ—Å–∏—Ç—å —Ñ–∞–π–ª –±–µ–∑ —Å–∂–∞—Ç–∏—è', callback_data='–±–µ–∑ —Å–∂–∞—Ç–∏—è')
            # keyboard.add(request_file_button)

            with open(filepath, 'rb') as f:
                bot.send_photo(message.chat.id, f)
                # f.seek(0)
                # bot.send_document(message.chat.id, f, caption='–≠—Ç–æ –æ—Ä–∏–≥–∏–Ω–∞–ª —Ñ–æ—Ç–æ –≤ –≤—ã—Å–æ–∫–æ–º –∫–∞—á–µ—Å—Ç–≤–µ')
            os.remove(filepath)
    except Exception as e:
        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å')
        close(e)
        return


def add_user(user_id):
    try:
        with open(db_path, 'a', newline='\n') as csvfile:
            writer = csv.writer(csvfile, dialect='excel')
            writer.writerow([user_id, datetime.datetime.now().strftime("%Y-%m-%d_%H-%M-%S")])
    except Exception as e:
        close(e)
        return


def send_to_all(message):
    try:
        with open(db_path) as f:
            csv_reader = csv.reader(f)
            for user in csv_reader:
                try:
                    bot.send_message(user[0], message)
                except Exception as e:
                    print(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user[0]}: {e}')
    except Exception as e:
        close(e)
        return


bot.polling(none_stop=True)
